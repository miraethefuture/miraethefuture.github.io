I"[<h1>🗂</h1>

<p>Enumeration은 연관된 값의 그룹을 위한 일반적인 type을 정의합니다. 그리고 그 값들을 코드안에서 type-safe한 방식으로 이용할 수 있도록 합니다.</p>

<h2 id="enumeration-syntax">Enumeration Syntax</h2>

<p>enum 키워드로 enumeration의 작성을 시작합니다. 그리고 전체 definition을 { } 안에 작성합니다.</p>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kd">enum</span> <span class="n">someEnumeration</span> <span class="p">{</span>
    <span class="c1">// enumeration의 definition</span>
  <span class="p">}</span>
</code></pre></div></div>

<p>아래는 나침반의 네개의 점을 표현한 enumeration의 예입니다.</p>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kd">enum</span> <span class="kt">CompassPoint</span> <span class="p">{</span>
      <span class="k">case</span> <span class="n">north</span>
      <span class="k">case</span> <span class="n">south</span>
      <span class="k">case</span> <span class="n">east</span>
      <span class="k">case</span> <span class="n">west</span>
  <span class="p">}</span>
</code></pre></div></div>

<p>north, south, east, west와 같이 enumeration 안에 정의된 값들을 enumeration cases 라고 합니다. 새 enumeration cases를 작성할 때는 case 키워드로 시작합니다.</p>

<p>여러개의 cases는 한줄에 ,라고 분리해 작성할 수 있습니다.</p>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kd">enum</span> <span class="kt">Planet</span> <span class="p">{</span>
    <span class="k">case</span> <span class="n">mercury</span><span class="p">,</span> <span class="n">venus</span><span class="p">,</span> <span class="n">earth</span><span class="p">,</span> <span class="n">mars</span><span class="p">,</span> <span class="n">jupiter</span><span class="p">,</span> <span class="n">saturn</span><span class="p">,</span> <span class="n">uranus</span><span class="p">,</span> <span class="n">neptune</span>
  <span class="p">}</span>
</code></pre></div></div>

<p>각각의 enumeration definition은 새로운 type을 정의합니다. Swift의 다른 type들처럼, 이름(CompassPoint, Planet과 같이)은 대문자로 시작합니다. 복수형보다는 단수형의 이름을 지어주어 명확히 읽히도록 합니다.</p>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">var</span> <span class="nv">directionToHead</span> <span class="o">=</span> <span class="kt">CompassPoint</span><span class="o">.</span><span class="n">west</span>
</code></pre></div></div>

<p>directionToHead의 타입은 CompassPoint의 값 중 하나와 함께 초기화될 때 추론됩니다. 일단 한번 directionToHead가 CompassPoint로써 선언되면 더 짧은 dot syntax로 다른 값을 설정할 수 있습니다. 이것은 코드를 더욱 더 잘 읽히도록 합니다.</p>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">directionToHead</span> <span class="o">=</span> <span class="o">.</span><span class="n">east</span>
</code></pre></div></div>

<h2 id="matching-enumeration-values-with-a-switch-statement">Matching Enumeration Values with a Switch statement</h2>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">directionToHead</span> <span class="o">=</span> <span class="o">.</span><span class="n">south</span>
  <span class="k">switch</span> <span class="n">directionToHead</span> <span class="p">{</span>
  <span class="k">case</span> <span class="o">.</span><span class="nv">north</span><span class="p">:</span>
      <span class="nf">print</span><span class="p">(</span><span class="s">"Lots of planets have a north"</span><span class="p">)</span>
  <span class="k">case</span> <span class="o">.</span><span class="nv">south</span><span class="p">:</span>
      <span class="nf">print</span><span class="p">(</span><span class="s">"Watch out for penguins"</span><span class="p">)</span>
  <span class="k">case</span> <span class="o">.</span><span class="nv">east</span><span class="p">:</span>
      <span class="nf">print</span><span class="p">(</span><span class="s">"Where the sun rises"</span><span class="p">)</span>
  <span class="k">case</span> <span class="o">.</span><span class="nv">west</span><span class="p">:</span>
      <span class="nf">print</span><span class="p">(</span><span class="s">"Where the skies are blue"</span><span class="p">)</span>
  <span class="p">}</span>
  <span class="c1">// Prints "Watch out for penguins"</span>
</code></pre></div></div>

<p>위의 코드는 directionToHead의 값이 .north와 같을 경우, “Lots of planets have a north”를 출력, .south와 같을 경우 “Watch out for penguins”를..(나머지도 같 ) 출력하라는 것을 나타냅니다.</p>

<p>Switch statement가 enumeration의 cases를 다룰때는 빠지는 case가 없도록 해야 합니다. 만약 .west case가 생략되면 이 코드는 컴파일 되지 않을 것입니다.</p>

<p>모든 enumeration cases에 대해 case를 제공하는 것이 적합하지 않을 때는 명시되지 않은 cases를 커버하기 위해 default case를 사용할 수 있습니다.</p>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">let</span> <span class="nv">somePlanet</span> <span class="o">=</span> <span class="kt">Planet</span><span class="o">.</span><span class="n">earth</span>
  <span class="k">switch</span> <span class="n">somePlanet</span> <span class="p">{</span>
  <span class="k">case</span> <span class="o">.</span><span class="nv">earth</span><span class="p">:</span>
      <span class="nf">print</span><span class="p">(</span><span class="s">"Mostly harmless"</span><span class="p">)</span>
  <span class="k">default</span><span class="p">:</span>
      <span class="nf">print</span><span class="p">(</span><span class="s">"Not a safe place for humans"</span><span class="p">)</span>
  <span class="p">}</span>
  <span class="c1">// "Mostly harmless"를 출력합니다.</span>
</code></pre></div></div>

<h2 id="iterating-over-enumeration-cases">Iterating over Enumeration Cases</h2>

<p>어떤 enumerations는</p>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kd">enum</span> <span class="kt">Beverage</span><span class="p">:</span> <span class="kt">CaseIterable</span> <span class="p">{</span>
      <span class="k">case</span> <span class="n">coffee</span><span class="p">,</span> <span class="n">tea</span><span class="p">,</span> <span class="n">juice</span>
  <span class="p">}</span>
  <span class="k">let</span> <span class="nv">numberOfChoices</span> <span class="o">=</span> <span class="kt">Beverage</span><span class="o">.</span><span class="n">allCases</span><span class="o">.</span><span class="n">count</span>
  <span class="nf">print</span><span class="p">(</span><span class="s">"</span><span class="se">\(</span><span class="n">numberOfChoices</span><span class="se">)</span><span class="s"> beverages available"</span><span class="p">)</span>
  <span class="c1">// "3 beverages available"을 출력</span>
</code></pre></div></div>
:ET